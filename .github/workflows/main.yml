# This workflow gonna push enviroment docker image
on:
  push:
    branches: [main]

name: Deploy docker image to Amazon ECR

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        id: configure-credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Create Production Environment File
        run: |
          touch .env
          echo REACT_APP_CHAIN_ID = ${{ secrets.REACT_APP_CHAIN_ID }} >> .env
          echo REACT_APP_NODE_1 = ${{ secrets.REACT_APP_NODE_1 }} >> .env
          echo REACT_APP_NODE_2 = ${{ secrets.REACT_APP_NODE_2 }} >> .env
          echo REACT_APP_NODE_3 = ${{ secrets.REACT_APP_NODE_3 }} >> .env
          echo REACT_APP_GOOGLE_ANALYTICS_ID = ${{ secrets.REACT_APP_GOOGLE_ANALYTICS_ID }} >> .env
          echo PUBLIC_URL = ${{ secrets.PUBLIC_URL }} >> .env
          echo NODE_ENV = ${{ secrets.NODE_ENV }} >> .env
          echo REACT_APP_CROWDIN_APIKEY = ${{ secrets.REACT_APP_CROWDIN_APIKEY }} >> .env
          echo REACT_APP_CROWDIN_PROJECTID = ${{ secrets.REACT_APP_CROWDIN_PROJECTID }} >> .env
          cat .env

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: defi-finance-swap-b
          IMAGE_TAG: latest
        run: |
          ls -al
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG . -f master.Dockerfile
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          docker run --name defi-finance-swap-b -t -d --env AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} --env AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} --env AWS_DEFAULT_REGION=us-east-2 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker exec defi-finance-swap-b sh -c "aws s3 sync . ${{ secrets.S3_BUCKET }}"

      # Invalidate Cloudfront
      - name: Invalidate cloudfront
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ secrets.DISTRIBUTION }}
          PATHS: "/index.html"
          AWS_REGION: "us-east-2"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
